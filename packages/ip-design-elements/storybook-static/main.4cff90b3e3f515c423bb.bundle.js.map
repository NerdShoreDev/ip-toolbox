{"version":3,"file":"main.4cff90b3e3f515c423bb.bundle.js","sources":["webpack:///./src/Chip/Chip.tsx"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar utils_1 = require(\"@dns/utils\");\nrequire(\"./Chip.css\");\nvar Chip = (function (_super) {\n    __extends(Chip, _super);\n    function Chip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Chip.prototype.render = function () {\n        var _a = this.props, classNames = _a.classNames, bgColor = _a.bgColor, deletable = _a.deletable, fullWidth = _a.fullWidth, image = _a.image, id = _a.id, onClick = _a.onClick, onDelete = _a.onDelete, selectable = _a.selectable, title = _a.title;\n        var textToColour = bgColor ? bgColor.toString() : utils_1.stringToColour(title);\n        var textColor = utils_1.getContrastYIQ(textToColour);\n        var inlineStyle = {\n            backgroundColor: textToColour,\n            color: textColor,\n        };\n        var inlineCloseStyle = {\n            color: textColor,\n        };\n        return (React.createElement(\"div\", { className: \"\\n          chip\\n          \" + (classNames ? classNames : '') + \"\\n          \" + (!deletable ? 'chip--free' : '') + \"\\n          \" + (fullWidth ? 'chip--full-width' : '') + \"\\n          \" + (selectable ? 'chip--selectable' : '') + \"\\n        \", style: inlineStyle, key: id, title: title },\n            image ?\n                React.createElement(\"img\", { src: image }) : null,\n            React.createElement(\"div\", { className: \"chip_value \" + (onClick ? 'chip_value_clickable' : ''), onClick: onClick }, title),\n            deletable ?\n                React.createElement(\"div\", { className: \"chip_delete-icon\", onClick: onDelete, style: inlineCloseStyle },\n                    React.createElement(\"i\", { className: \"material-icons\" }, \"close\")) : null));\n    };\n    Chip.defaultProps = {\n        deletable: false,\n        title: '',\n    };\n    return Chip;\n}(React.Component));\nexports.Chip = Chip;\n\n\ntry {\n  (exports.Chip || Chip).displayName = \"Chip\";\n\n  (exports.Chip || Chip).__docgenInfo = {\n    description: \"\",\n    displayName: \"Chip\",\n    props: {\n      \"title\": {\n          defaultValue:  {\n                    value: \"\"\n                  },\n          description: \"\",\n          name: \"title\",\n          required: true,\n          type: {\n            name: \"string\"\n          }\n        },\n\"id\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"id\",\n          required: false,\n          type: {\n            name: \"string | number\"\n          }\n        },\n\"bgColor\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"bgColor\",\n          required: false,\n          type: {\n            name: \"string | boolean\"\n          }\n        },\n\"image\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"image\",\n          required: false,\n          type: {\n            name: \"any\"\n          }\n        },\n\"deletable\": {\n          defaultValue:  {\n                    value: \"false\"\n                  },\n          description: \"\",\n          name: \"deletable\",\n          required: false,\n          type: {\n            name: \"boolean\"\n          }\n        },\n\"fullWidth\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"fullWidth\",\n          required: false,\n          type: {\n            name: \"boolean\"\n          }\n        },\n\"selectable\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"selectable\",\n          required: false,\n          type: {\n            name: \"boolean\"\n          }\n        },\n\"classNames\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"classNames\",\n          required: false,\n          type: {\n            name: \"any\"\n          }\n        },\n\"onClick\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"onClick\",\n          required: false,\n          type: {\n            name: \"() => void\"\n          }\n        },\n\"onDelete\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"onDelete\",\n          required: false,\n          type: {\n            name: \"() => void\"\n          }\n        },\n\"payload\": {\n          defaultValue: null,\n          description: \"\",\n          name: \"payload\",\n          required: false,\n          type: {\n            name: \"any\"\n          }\n        }\n    }\n  }\n\n  \n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n    STORYBOOK_REACT_CLASSES[\"src/Chip/Chip.tsx#Chip\"] = {\n      name: \"Chip\",\n      docgenInfo: (exports.Chip || Chip).__docgenInfo,\n      path: \"src/Chip/Chip.tsx\"\n    }\n  }\n  \n} catch (e) {}\n  \n"],"mappings":"AACA","sourceRoot":""}